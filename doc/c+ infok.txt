
//--- h

// Band Width
    struct BandWidht {
        uint8_t idx;
        const char *name;
    };

    static const BandWidht bandWidthFM[5];
    static const BandWidht bandWidthAM[7];
    static const BandWidht bandWidthSSB[6];


    /**
     * Visszaadja a BandWidth nevek tömbjét (automatikus méretszámítással)
     */
    template <size_t N>
    const char **getBandWidthNames(const BandWidth (&bandList)[N]) {
        static const char *names[N];  // Automatikusan méretezett statikus tömb
        for (size_t i = 0; i < N; i++) {
            names[i] = bandList[i].name;
        }
        return names;
    }

    /**
     * Megkeresi a BandWidth idx-et a BandWidth name alapján (automatikus méretszámítással)
     */
    template <size_t N>
    int8_t getBandWidthIndex(const BandWidth (&bandList)[N], const char *name) {
        for (size_t i = 0; i < N; i++) {
            if (strcmp(bandList[i].name, name) == 0) {
                return bandList[i].idx;
            }
        }
        return -1;  // Nem található
    }


//--- cpp


// Band Width - ez indexre állítódik az si4735-ben!
const BandWidht Band::bandWidthFM[5] = {
    {0, "AUTO"},  // 0 - Default
    {1, "110"},   // 1
    {2, "84"},    // 2
    {3, "60"},    // 3
    {4, "40"}     // 4
};
const BandWidht Band::bandWidthAM[7] = {
    {4, "1.0"},  // 0
    {5, "1.8"},  // 1
    {3, "2.0"},  // 2
    {6, "2.5"},  // 3
    {2, "3.0"},  // 4 - Default
    {1, "4.0"},  // 5
    {0, "6.0"}   // 6
};
const BandWidht Band::bandWidthSSB[6] = {
    {4, "0.5"},  // 0
    {5, "1.0"},  // 1
    {0, "1.2"},  // 2
    {1, "2.2"},  // 3
    {2, "3.0"},  // 4 - Default
    {3, "4.0"}   // 5
};
